var g=async({MongoClient:m,ObjectId:l},i)=>{console.log("Checking MongoDB connection...");let r={async addItems(t,e){return{}},async getItems(t,e){return{}},async deleteItems(t,e){return{}}},d=t=>(r.addItems=async(e,o)=>{try{let n=t.collection(o),a=[],c=[];for(let s of e)s._id?c.push(s):a.push({...s,createdAt:new Date});if(a.length>0&&await n.insertMany(a),c.length>0)for(let s of c)await n.updateOne({_id:l.createFromHexString(s._id)},{$set:s.fieldsToUpdate});return{items:await t.collection(o).find({}).toArray()}}catch(n){return{error:{code:"DB_ERROR",message:n.message}}}},r.getItems=async(e,o)=>{try{return{items:await t.collection(o).find(e.find,e.options).toArray()}}catch(n){return{error:{code:"DB_ERROR",message:n.message}}}},r.deleteItems=async(e,o)=>{try{let n=t.collection(o);for(let c of e)await n.deleteOne({_id:l.createFromHexString(c._id)});return{items:await t.collection(o).find({}).toArray()}}catch(n){return{error:{code:"DB_ERROR",message:n.message}}}},r);try{let t=new m(i.url);await t.connect();let e=t.db(i.dbName);return console.log("MongoDB connected successfully!!!"),d(e)}catch(t){return console.log("Error during MongoDB connection ",t),r.addItems=async(e,o)=>({error:{code:"DB_CONNECTION_ERROR",message:"DB disconnected"}}),r.getItems=async(e,o)=>({error:{code:"DB_CONNECTION_ERROR",message:"DB disconnected"}}),r.deleteItems=async(e,o)=>({error:{code:"DB_CONNECTION_ERROR",message:"DB disconnected"}}),r}},y={getDbManager:g};export{y as default};
